name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        build_type: [Release]
        include:
          #- os: windows-latest
          #  c_compiler: cl
          #  cpp_compiler: cl
          #- os: ubuntu-latest
          #  c_compiler: clang
          #  cpp_compiler: clang++
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++

    steps:
    - uses: actions/checkout@v4
      with:
        clean: true
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Git Pull
      run: git pull origin main
      shell: bash

    - name: Clean previous builds
      run: |
        rm -rf build/
        rm -rf CMakeCache.txt
        rm -rf CMakeFiles/
      shell: bash

    - name: Configure CMake
      shell: bash
      run: |
        cmake -B build \
              -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
              -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
              -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

    - name: Build
      shell: bash
      run: cmake --build build --config Release

    - name: Copy to bin
      run: |
        mkdir -p bin
        cp build/bin/MyExecutable bin/ || true

  deploy:
    needs: build
    runs-on: macos-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Git Pull
        run: git pull origin main
        shell: bash

      - name: Clean and Build
        run: |
          # Xóa thư mục build và cache cũ
          rm -rf build/
          rm -rf CMakeCache.txt
          rm -rf CMakeFiles/
          
          # Tạo build mới
          cmake -B build \
                -DCMAKE_BUILD_TYPE=Release
          
          # Build project
          cmake --build build
          
          # Tạo thư mục bin và copy executable
          mkdir -p bin
          cp build/bin/MyExecutable bin/ || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: bin/MyExecutable
          retention-days: 5