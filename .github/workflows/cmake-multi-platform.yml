name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        build_type: [Release]
        include:
          #- os: windows-latest
          #  c_compiler: cl
          #  cpp_compiler: cl
          #- os: ubuntu-latest
          #  c_compiler: clang
          #  cpp_compiler: clang++
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++

    steps:
    - uses: actions/checkout@v4
      with:
        clean: true

    - name: Clean previous builds
      run: |
        rm -rf ${{ github.workspace }}/build
        git clean -ffdx
      shell: bash

    - name: Configure CMake
      shell: bash
      run: |
        cmake -B ${{ github.workspace }}/build \
              -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
              -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
              -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

    - name: Build
      shell: bash
      run: cmake --build ${{ github.workspace }}/build --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ github.workspace }}/build
      shell: bash
      run: ctest --build-config ${{ matrix.build_type }}


  
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 192.168.1.2 >> ~/.ssh/known_hosts

      - name: Deploy to macOS
        run: |
          ssh your-user@192.168.1.2 "
          cd /path/to/your/app &&
          git pull origin main &&
          brew services restart your-app-service"